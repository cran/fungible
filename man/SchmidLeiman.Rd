% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SchmidLeiman.R
\name{SchmidLeiman}
\alias{SchmidLeiman}
\title{Schmid-Leiman Orthogonalization to a (Rank-Deficient) Bifactor Structure}
\usage{
SchmidLeiman(R, numFactors, facMethod = "fals", rotate = "oblimin",
  rescaleH2 = 0.98, digits = NULL, faControl = NULL,
  rotateControl = NULL)
}
\arguments{
\item{R}{(Matrix) A correlation matrix.}

\item{numFactors}{(Vector) The number of latent factors at each level of 
analysis. For example, c(3, 1) estimates three latent factors in the first-order 
common factor model and one latent factor in the second-order common factor 
model (i.e., 3 group factors and 1 general factor). This function can 
orthogonalize up to (and including) a three-order factor solution.}

\item{facMethod}{(Character) The method used for factor extraction 
(\code{\link{faX}}). The supported options are "fals" for unweighted least 
squares, "faml" for maximum likelihood, "fapa" for iterated principal axis 
factoring, "faregLS" for regularized least squares,
"faregML" for regularized maximum likelihood, and "pca" for principal components 
 analysis. The default method  is "fals". 
\itemize{
  \item \strong{"fals"}: Factors are extracted using the unweighted least 
  squares estimation procedure using the \code{\link{fals}} function.
  \item \strong{"faml"}: Factors are extracted using the maximum likelihood 
  estimation procedure using the \code{\link[stats]{factanal}} function.
  \item \strong{"fapa"}: Factors are extracted using the iterated principal 
  axis factoring estimation procedure using the \code{\link{fapa}} function.
  \item \strong{"faregLS"}: Factors are extracted using regularized 
  least squares factor analysis using the \code{\link{fareg}} function. 
  \item \strong{"faregML"}: Factors are extracted using regularized 
  maximum likelihood factor using the \code{\link{fareg}} function. 
  \item \strong{"pca"}: Principal components are extracted. 
}}

\item{rotate}{(Character) Designate which rotation algorithm to apply. See 
the \code{\link{faMain}} function for more details about possible rotations. 
Defaults to rotate = "oblimin".}

\item{rescaleH2}{(Numeric) If a Heywood case is detected at any level of the 
higher-order factor analyses, rescale the communality value to continue with 
the matrix algebra. When a Heywood case occurs, the uniquenesses (i.e., 
specific-factor variances) will be negative and the SL orthogonalization of 
the group factors is no longer correct.}

\item{digits}{(Numeric) Rounds the values to the specified number of decimal 
places. Defaults to digits = NULL (no rounding).}

\item{faControl}{(List) A list of optional parameters passed to the factor 
extraction (\code{\link{faX}}) function.
\itemize{
  \item \strong{treatHeywood}: (Logical) In \code{fals}, if treatHeywood is 
  true, a penalized least squares function is used to bound the communality 
  estimates below 1.0. Defaults to treatHeywood = TRUE.
  \item \strong{nStart}: (Numeric) The number of starting values to be tried 
  in \code{faml}. Defaults to nStart = 10.
  \item \strong{start}: (Matrix) NULL or a matrix of starting values, each column 
  giving an initial set of uniquenesses. Defaults to start = NULL. 
  \item \strong{maxCommunality}: (Numeric) In \code{faml}, set the maximum 
  communality value for the estimated solution. Defaults to maxCommunality = .995.
  \item \strong{epsilon}: (Numeric) In \code{fapa}, the numeric threshold 
  designating when the algorithm has converged. Defaults to epsilon = 1e-4.
  \item \strong{communality}: (Character) The method used to estimate the 
  initial communality values in \code{fapa}. Defaults to communality = 'SMC'.
  \itemize{
    \item \strong{"SMC"}: Initial communalities are estimated by taking the 
    squared multiple correlations of each indicator after regressing the 
    indicator on the remaining variables.
    \item \strong{"maxr"}: Initial communalities equal the largest 
    (absolute value) correlation in each column of the correlation matrix.
    \item \strong{"unity"}: Initial communalities equal 1.0 for all variables.
  }
  \item \strong{maxItr}: (Numeric) In \code{fapa}, the maximum number of 
  iterations to reach convergence. Defaults to maxItr = 15,000.
}}

\item{rotateControl}{(List) A list of control values to pass to the factor rotation algorithms.
\itemize{
  \item \strong{numberStarts}: (Numeric) The number of random (orthogonal) 
  starting configurations for the chosen rotation method (e.g., oblimin). 
  Defaults to numberStarts = 10. 
  \item \strong{itemSort}: (Logical) If TRUE, sort the row order of all the following output 
  such that variables loading on a common factor are grouped together for 
  ease of interpretation: (a) the global minimum factor loadings, 
  (b) indicator communalities, (c) factor-loading bootstrap standard errors, 
  (d) factor-loading bootstrap confidence interval quantiles (both upper and 
  lower), and (e) the array of all factor-loading bootstrap results. 
  Defaults to itemSort = FALSE.
  \item \strong{gamma}: (Numeric) This is a tuning parameter (between 0 
  and 1, inclusive) for an oblimin rotation.  See the \pkg{GPArotation} 
  library's oblimin documentation for more details. Defaults to gamma = 0 
  (i.e., a quartimin rotation).
  \item \strong{delta}: (Numeric) This is a tuning parameter for the geomin
   rotation. It adds a small number (default = .01) to the squared factor 
   loadings before computing the geometric means in the discrepancy function.
  \item \strong{kappa}: (Numeric) The main parameterization of the 
  Crawford-Ferguson (CF) rotations (i.e., "cfT" and "cfQ" for orthogonal and 
  oblique CF rotation, respectively). Defaults to kappa = 0. 
  \item \strong{k}: (Numeric) A specific parameter of the simplimax rotation. 
  Defaults to k = the number of observed variables.
  \item \strong{standardize}: (Character) The standardization routine used 
  on the unrotated factor structure. The three options are "none", "Kaiser", 
  and "CM". Defaults to standardize = "none". 
  \itemize{
    \item \strong{"none"}: No standardization is applied to the unrotated 
    factor structure. 
    \item \strong{"Kaiser"}: Use a factor structure matrix that has been 
    normed by Kaiser's method (i.e., normalize all rows to have a unit length).
    \item \strong{"CM"}: Use a factor structure matrix that has been normed
     by the Cureton-Mulaik method.
  }
  \item \strong{epsilon}: (Numeric) The rotational convergence criterion to 
  use. Defaults to epsilon = 1e-5.
  \item \strong{power}: (Numeric) Raise factor loadings the the n-th power 
  in the \code{\link{promaxQ}} rotation. Defaults to power = 4.
  \item \strong{maxItr}: (Numeric) The maximum number of iterations for the 
  rotation algorithm. Defaults to maxItr = 15000.
}}
}
\value{
\itemize{
  \item \strong{L1}: (Matrix) The first-order (oblique) factor pattern matrix.
  \item \strong{L2}: (Matrix) The second-order (oblique) factor pattern matrix.
  \item \strong{L3}: (Matrix, NULL) The third-order (oblique) factor pattern 
  matrix (if applicable).
  \item \strong{Phi1}: (Matrix) The first-order factor correlation matrix.
  \item \strong{Phi2}: (Matrix) The second-order factor correlation matrix.
  \item \strong{Phi3}: (Matrix, NULL) The third-order factor pattern matrix 
  (if applicable).
  \item \strong{Usq1}: (Matrix) The first-order factor uniquenesses (variances).
  \item \strong{Usq2}: (Matrix) The second-order factor uniquenesses (variances).
  \item \strong{Usq3}: (Matrix, NULL) The third-order factor uniquenesses 
  (variances) (if applicable).
  \item \strong{B}: (Matrix) The resulting Schmid-Leiman transformation.
  \item \strong{rotateControl}: (List) A list of the control parameters 
  passed to the \code{\link{faMain}} function.
  \item \strong{faControl}: (List) A list of optional parameters passed to 
  the factor extraction (\code{\link{faX}}) function.
}
}
\description{
The Schmid-Leiman (SL) procedure orthogonalizes a higher-order factor 
structure into a rank-deficient bifactor structure. The Schmid-Leiman method 
is a generalization of Thomson's orthogonalization routine.
}
\examples{
## Dataset used in Schmid & Leiman (1957) rounded to 2 decimal places
SLdata <-
  matrix(c(1.0, .72, .31, .27, .10, .05, .13, .04, .29, .16, .06, .08,
           .72, 1.0, .35, .30, .11, .06, .15, .04, .33, .18, .07, .08,
           .31, .35, 1.0, .42, .08, .04, .10, .03, .22, .12, .05, .06,
           .27, .30, .42, 1.0, .06, .03, .08, .02, .19, .11, .04, .05,
           .10, .11, .08, .06, 1.0, .32, .13, .04, .11, .06, .02, .03,
           .05, .06, .04, .03, .32, 1.0, .07, .02, .05, .03, .01, .01,
           .13, .15, .10, .08, .13, .07, 1.0, .14, .14, .08, .03, .04,
           .04, .04, .03, .02, .04, .02, .14, 1.0, .04, .02, .01, .01,
           .29, .33, .22, .19, .11, .05, .14, .04, 1.0, .45, .15, .17,
           .16, .18, .12, .11, .06, .03, .08, .02, .45, 1.0, .08, .09,
           .06, .07, .05, .04, .02, .01, .03, .01, .15, .08, 1.0, .42,
           .08, .08, .06, .05, .03, .01, .04, .01, .17, .09, .42, 1.0),
         nrow = 12, ncol = 12, byrow = TRUE)

Out1 <- SchmidLeiman(R          = SLdata,
                     numFactors = c(6, 3, 1),
                     digits     = 2)$B

## An orthogonalization of a two-order structure
bifactor <- matrix(c(.46, .57, .00, .00,
                     .48, .61, .00, .00,
                     .61, .58, .00, .00,
                     .46, .00, .55, .00,
                     .51, .00, .62, .00,
                     .46, .00, .55, .00,
                     .47, .00, .00, .48,
                     .50, .00, .00, .50,
                     .49, .00, .00, .49),
                   nrow = 9, ncol = 3, byrow = TRUE)

## Model-implied correlation (covariance) matrix
R <- bifactor \%*\% t(bifactor)

## Unit diagonal elements
diag(R) <- 1

Out2 <- SchmidLeiman(R          = R,
                     numFactors = c(3, 1),
                     rotate     = "oblimin",
                     digits     = 2)$B

}
\references{
Abad, F. J., Garcia-Garzon, E., Garrido, L. E., & Barrada, J. R. 
(2017). Iteration of partially specified target matrices: application to the 
bi-factor case. \emph{Multivariate Behavioral Research, 52}(4), 416-429.

Giordano, C. & Waller, N. G. (under review). Recovering bifactor 
models: A comparison of seven methods.

Schmid, J., & Leiman, J. M. (1957). The development of 
hierarchical factor solutions. \emph{Psychometrika, 22}(1), 53-61.
}
\seealso{
Other Factor Analysis Routines: \code{\link{BiFAD}},
  \code{\link{GenerateBoxData}}, \code{\link{SLi}},
  \code{\link{faAlign}}, \code{\link{faMain}},
  \code{\link{faSort}}, \code{\link{faStandardize}},
  \code{\link{faX}}, \code{\link{fals}},
  \code{\link{fapa}}, \code{\link{fareg}},
  \code{\link{orderFactors}}, \code{\link{promaxQ}}
}
\author{
\itemize{
  \item Casey Giordano (Giord023@umn.edu)
  \item Niels G. Waller (nwaller@umn.edu)
}
}
\concept{Factor Analysis Routines}
